# Copyright (C) from 2022 The Play Framework Contributors <https://github.com/playframework>, 2011-2021 Lightbend Inc. <https://www.lightbend.com>

# Reference configuration for Play

#default timeout for promises
# @richdougherty: Is this used any more?
promise.akka.actor.typed.timeout=5s

play {
  # Defines whether the global application is allowed
  # Set this to true if you need to use Play.application, or any deprecated global helpers.
  allowGlobalApplication = false

  logger {
    # This is a boolean configuration.
    # If true, the configuration properties will be used when configuring the logger.
    includeConfigProperties = false
  }

  http {

    # The application context.
    # Must start with /.
    context = "/"

    # The router.
    # Used by Play's built in DI support to locate and bind a request handler.  Must be the FQCN of a Play router.
    # If null, will attempt to load a class called router.Routes, otherwise if that's not found, an empty
    # router will be bound.
    router = null

    # The request handler.
    # Used by Play's built in DI support to locate and bind a request handler.  Must be one of the following:
    # - A FQCN that implements play.api.http.HttpRequestHandler (Scala).
    # - A FQCN that implements play.http.HttpRequestHandler (Java).
    # - provided, indicates that the application has bound an instance of play.api.http.HttpRequestHandler through some
    #   other mechanism.
    # If null, will attempt to load a class called RequestHandler in the root package, otherwise if that's
    # not found, will default to play.api.http.JavaCompatibleHttpRequestHandler.
    requestHandler = null

    # The request handler.
    # Used by Play's built in DI support to locate and bind a request handler.  Must be one of the following:
    # - A FQCN that implements play.http.ActionCreator (Java).
    # If null, will attempt to load a class called ActionCreator in the root package, otherwise if that's
    # not found, will default to play.http.DefaultActionCreator.
    actionCreator = null

    # The error handler.
    # Used by Play's built in DI support to locate and bind an error handler.  Must be one of the following:
    # - A FQCN that implements play.api.http.HttpErrorHandler (Scala).
    # - A FQCN that implements play.http.HttpErrorHandler (Java).
    # - provided, indicates that the application has bound an instance of play.api.http.HttpErrorHandler through some
    #   other mechanism.
    # If null, will attempt to load a class called ErrorHandler in the root package, otherwise if that's
    # not found, will default to play.api.http.DefaultHttpErrorHandler.
    errorHandler = null

    # The filters.
    # Used by Play's built in DI support to locate and bind a class to provide filters.  Must be one of the following:
    # - A FQCN that implements play.api.http.HttpFilters (Scala).
    # - A FQCN that implements play.http.HttpFilters (Java).
    # - provided, indicates that the application has bound an instance of play.api.http.HttpFilters through some
    #   other mechanism.
    # If null, will attempt to load a class called Filters in the root package, otherwise if that's not found, will
    # default to play.api.http.EnabledFilters, which provides the default filters.
    # To disable filters completely, set this to "play.api.http.NoHttpFilters"
    filters = null

    # Forwarded header configuration
    # Play supports various forwarded headers used by proxies to indicate the incoming IP address and protocol of
    # requests. Play uses this in the implementation of the RequestHeader.remoteAddress and RequestHeader.secure
    # fields.
    forwarded = {

      # The version of forwarded headers to use.
      # Valid values are x-forwarded and rfc7239.
      # x-forwarded uses the de facto standard X-Forwarded-For and X-Forwarded-Proto headers to determine the correct
      # remote address and protocol for the request. These headers are widely used, however, they have some serious
      # limitations, for example, if you have multiple proxies, and only one of them adds the X-Forwarded-Proto header,
      # it's impossible to reliably determine which proxy added it and therefore whether the request from the client
      # was made using https or http. rfc7239 uses the new Forwarded header standard, and solves many of the
      # limitations of the X-Forwarded-* headers.
      version = "x-forwarded"

      # The trusted proxies.
      # Trusted proxies may either be individual IPv4 or IPv6 addresses, or be IPv4 or IPv6 CIDR address ranges.
      # This is used to prevent IP address spoofing. Multiple proxies can add and append to the forwarded headers,
      # including the client, which could masquerade as a proxy proxying requests on behalf of another client.  Play
      # will validate that the incoming request IP, and all forwarded headers match the addresses in this list, and will
      # present the first untrusted IP address that it finds (or if all addresses are trusted, the last address) to the
      # application.
      # Note that a number of cloud hosting platforms, most notably AWS, make no guarantees as to what IP addresses
      # their proxies will make requests from. If this is the case, in order for Play to respect the forwarded headers,
      # you need to trust all IP addresses, therefore making it possible for clients to spoof the incoming address.
      # To trust all IP addresses, set this to ["0.0.0.0/0", "::/0"].
      trustedProxies = ["127.0.0.1", "::1"]
    }

    # Parsing configuration
    parser = {

      # The maximum amount of a request body that should be buffered into memory
      maxMemoryBuffer = 100k

      # The maximum amount of a request body that should be buffered into disk
      maxDiskBuffer = 10m

      # If empty multipart/form-data file uploads are allowed (no matter if filename or file is empty)
      allowEmptyFiles = false
    }

    # Action composition configuration
    actionComposition = {

      # If annotations put directly on Controller classes should be executed before the ones put on action methods
      controllerAnnotationsFirst = false

      # If the action returned by the action creator should be executed before the action composition ones
      executeActionCreatorActionFirst = false
    }

    # Cookies configuration
    cookies = {

      # Whether strict cookie parsing should be used. If true, will ignore the entire cookie header if a single invalid
      # cookie is found, otherwise, will just ignore the invalid cookie if an invalid cookie is found. The reason
      # dropping the entire header may be useful is that browsers don't make any attempt to validate cookie values,
      # which may open opportunities for an attacker to trigger some edge case in the parser to steal cookie
      # information. By dropping the entire header, this makes it harder to exploit edge cases.
      strict = true
    }

    # #session-configuration
    # Session configuration
    session = {

      # The cookie name
      cookieName = "PLAY_SESSION"

      # Whether the secure attribute of the cookie should be set to true
      secure = false

      # The max age to set on the cookie.
      # If null, the cookie expires when the user closes their browser.
      # An important thing to note, this only sets when the browser will discard the cookie.
      maxAge = null

      # Whether the HTTP only attribute of the cookie should be set to true
      httpOnly = true

      # The value of the SameSite attribute of the cookie. Set to null for no SameSite attribute.
      # Possible values are "lax" and "strict". If misconfigured it's set to null.
      sameSite = "lax"

      # The domain to set on the session cookie
      # If null, does not set a domain on the session cookie.
      domain = null

      # The session path
      # Must start with /.
      path = ${play.http.context}

      jwt {
        # The JWT signature algorithm to use on the session cookie
        # uses 'alg' https://tools.ietf.org/html/rfc7515#section-4.1.1
        signatureAlgorithm = "HS256"

        # The time after which the session is automatically invalidated.
        # Use 'exp' https://tools.ietf.org/html/rfc7519#section-4.1.4
        expiresAfter = ${play.http.session.maxAge}

        # The amount of clock skew to accept between servers when performing date checks
        # If you have NTP or roughtime synchronizing between servers, you can enhance
        # security by tightening this value.
        clockSkew = 5 minutes

        # The claim key under which all user data is stored in the JWT.
        dataClaim = "data"
      }
    }
    # #session-configuration

    # Flash configuration
    flash = {
      # The cookie name
      cookieName = "PLAY_FLASH"

      # Whether the flash cookie should be secure or not
      secure = false

      # Whether the HTTP only attribute of the cookie should be set to true
      httpOnly = true

      # The value of the SameSite attribute of the cookie. Set to null for no SameSite attribute.
      # Possible values are "lax" and "strict". If misconfigured it's set to null.
      sameSite = "lax"

      # The flash path
      # Must start with /.
      path = ${play.http.context}

      # The domain to set on the flash cookie
      # If null, does not set a domain on the flash cookie.
      domain = ${play.http.session.domain}

      jwt {
        # The JWT signature algorithm to use on the session cookie
        # uses 'alg' https://tools.ietf.org/html/rfc7515#section-4.1.1
        signatureAlgorithm = "HS256"

        # The time after which the session is automatically invalidated.
        # Use 'exp' https://tools.ietf.org/html/rfc7519#section-4.1.4
        expiresAfter = null

        # The amount of clock skew to accept between servers when performing date checks
        # If you have NTP or roughtime synchronizing between servers, you can enhance
        # security by tightening this value.
        clockSkew = 5 minutes

        # The claim key under which all user data is stored in the JWT.
        dataClaim = "data"
      }
    }

    # Secret configuration
    secret {
      # The application secret. Must be set. A value of "changeme" will cause the application to fail to start in
      # production.
      key = "changeme"

      # The JCE provider to use. If null, uses the platform default.
      provider = null
    }

    fileMimeTypes = """
        txt=text/plain
        html=text/html
        json=application/json
        wasm=application/wasm
        css=text/css
        js=application/javascript
        svg=image/svg+xml
        png=image/png
        gif=image/gif
      """
  }

  filters {
    # List of enabled filters as fully qualified class names
    # enabled = []

    # List of disabled filters as fully qualified class names
    disabled = []
  }

  temporaryFile {
    # Path to directory where temporary files will be stored
    dir = ${?java.io.tmpdir}

    # Removes stale temporary files from the filesystem.  This is a backup
    # to the "remove-on-gc" functionality in the default temporary file creator,
    # for when GC is not happening fast enough.  Uses play.akka.blockingIoDispatcher.
    reaper {
      enabled = false
      initialDelay = "5 minutes"
      interval = "5 minutes"
      olderThan = "5 minutes"
    }
  }

  # The ApplicationLoader to use for creating the Application.
  # This MUST either be set in application.conf or in some module.
  #application.loader = null

  modules {

    # The enabled modules that should be automatically loaded.
    enabled += "play.api.inject.BuiltinModule"
    enabled += "play.api.i18n.I18nModule"
    enabled += "play.api.mvc.CookiesModule"
    enabled += "controllers.AssetsModule"

    # A way to disable modules that are automatically enabled
    disabled = []

  }

  # Internationalisation configuration
  i18n {

    # The languages supported by this application
    langs = []

    # A path to prefix message file loading with.  Use this if you want to place your messages resources at some path
    # other than the root application path.
    path = null

    # The name of the cookie to store the Play language in.  This cookie is set when MessagesApi.setLang is invoked, and
    # read when the preferred lang is loaded.
    langCookieName = "PLAY_LANG"

    # The max age to set on the cookie.
    # If null, the cookie expires when the user closes their browser.
    # An important thing to note, this only sets when the browser will discard the cookie.
    langCookieMaxAge = null

    # Whether the language cookie should be secure or not
    langCookieSecure = false

    # Whether the HTTP only attribute of the cookie should be set to true
    langCookieHttpOnly = false

    # The value of the SameSite attribute of the cookie. Set to null for no SameSite attribute.
    # Possible values are "lax" and "strict". If misconfigured it's set to null.
    langCookieSameSite = "lax"

  }

  akka {

    # The name of the actor system that Play creates
    actor-system = "application"

    # How long Play should wait for Akka to shutdown before timing it.  If "infinite" or null, waits indefinitely.
    shutdown-timeout = infinite

    # The blocking IO dispatcher, used for serving files/resources from the file system or classpath.
    blockingIoDispatcher {
      fork-join-executor {
        parallelism-factor = 3.0
      }

    }

    # The dev mode actor system. Play typically uses the application actor system, however, in dev mode, an actor
    # system is needed that outlives the application actor system, since the HTTP server will need to use this, and it
    # lives through many application (and therefore actor system) restarts.
    dev-mode {

      akka {

        # Since Akka 2.5.8 there's a setting to disable all Akka-provided JVM shutdown
        # hooks. This will not only enable CoordinatedShutdown but also Artery or other
        # Akka-managed hooks.
        jvm-shutdown-hooks = on

        # CoordinatedShutdown is an extension introduced in Akka 2.5 that will
        # perform registered tasks in the order that is defined by the phases.
        # This setup override Akka default settings with Play-specific ones for dev mode.
        coordinated-shutdown {

          # Terminate the ActorSystem in the last phase actor-system-terminate.
          terminate-actor-system = on

          # This setting is on the `dev-mode` specific settings and is only used by the Server. It
          # doesn't make sense to exit the JVM in Dev mode.
          exit-jvm = off

          # Run the coordinated shutdown when the JVM process exits, e.g.
          # via kill SIGTERM signal. This setting is on the `dev-mode` specific settings and is
          # only used by the Server. Defaults to 'on' since exiting the build tool (sbt/gradle/...)
          # should cause the execution of `coordinated-shutdown`.
          run-by-jvm-shutdown-hook = on
        }
      }
    }
  }

  #Assets configuration
  assets {

    # The path on the classpath where assets are located (should be the same as the path parameter in route)
    path = "/public"
    # The URL prefix before your asset name (excluding the trailing slash)
    urlPrefix = "/assets"

    #Default behaviour for checkForMinified is false for dev and true for non-dev modes
    checkForMinified = null

    defaultCache = "public, max-age=3600"

    aggressiveCache = "public, max-age=31536000, immutable"

    digest.algorithm = "md5"

    default.charset = "utf-8"

    # registrations which have charset="utf-8" appended to the content-type header.
    textContentTypes = [ "application/json", "application/javascript" ]

    # This defines which compressions of assets are served by the Assets controller
    # and which priorities they have. E.g. having "br" as first entry and "gzip" as
    # second one will serve a brotli compressed asset rather than a gzip compressed
    # asset to a client supporting both compressions.
    #
    # It also defines for which kind of compressed assets we're looking for on the classpath.
    # If you know, you only provide certain kinds of compressions, disable the others to get
    # a little bit more performance out of your application.
    encodings = [
      { accept: "br", extension: "br"}
      { accept: "gzip", extension: "gz" }
      { accept: "xz", extension: "xz" }
      { accept: "bz2", extension: "bz2" }
    ]

  }

}
